Johnnyj1031
繪製地震點並在點上顯示地震資訊
for i in range(len(df)): # 取得緯度和經度資訊 latitude = df.iloc[i, 2] longitude = df.iloc[i, 1]
# 取得地震資訊
time = df.iloc[i, 0]
magnitude = df.iloc[i, 3]
depth = df.iloc[i, 4]
location = df.iloc[i, 5]

# 在地圖上標記地震點並顯示地震資訊
popup_info = f"Time: {time}\nLatitude: {latitude}\nLongitude: {longitude}\nMagnitude: {magnitude}\nDepth: {depth}\nLocation: {location}"
folium.Marker([latitude, longitude], popup=popup_info).add_to(m)
我看資訊被沒有換行

GitHub Copilot
你的代碼中使用了 f-string 格式化來創建彈出信息，並且使用了 "\n" 來換行。這應該在彈出信息中創建新的行。然而，如果你在瀏覽器中看到的彈出信息沒有換行，那可能是因為 folium 不支持 "\n" 來換行。

你可以嘗試使用 HTML 標籤來換行，如下所示：
# 繪製地震點並在點上顯示地震資訊
for i in range(len(df)):
    # 取得緯度和經度資訊
    latitude = df.iloc[i, 2]
    longitude = df.iloc[i, 1]
    
    # 取得地震資訊
    time = df.iloc[i, 0]
    magnitude = df.iloc[i, 3]
    depth = df.iloc[i, 4]
    location = df.iloc[i, 5]
    
    # 在地圖上標記地震點並顯示地震資訊
    popup_info = f"Time: {time}<br>Latitude: {latitude}<br>Longitude: {longitude}<br>Magnitude: {magnitude}<br>Depth: {depth}<br>Location: {location}"
    folium.Marker([latitude, longitude], popup=folium.Popup(popup_info, max_width=250)).add_to(m)
在這裡，我使用了 "" 來換行，並且使用了 folium.Popup 來創建彈出信息，這樣我可以設置最大寬度，以確保所有的信息都能在彈出窗口中顯示。

Johnnyj1031
import pandas as pd import folium

讀取CSV文件，使用'cp950'編碼
df = pd.read_csv(r'C:\Users\Johnny\Desktop\cycu_ai2024\11272008\20240409\地震活動彙整.csv', encoding='cp950')

刪除第一欄和第一列的資料
df = df.drop(df.columns[0], axis=1) df = df.drop(df.index[0], axis=0)

將目前第一欄的資料轉換成日期時間格式
df[df.columns[0]] = pd.to_datetime(df[df.columns[0]])

將目前第一欄的資料只取2024-04-03 07:58:00 之後的資料
df = df[df[df.columns[0]] >= '2024-04-03 07:58:00']

將第一欄的名稱改為時間，第二欄的名稱改為經度，第三欄的名稱改為緯度，第四欄的名稱改為規模，第五欄的名稱改為深度，第六欄的名稱改為地點
df.columns = ['時間', '經度', '緯度', '規模', '深度', '地點']

印出資料
print(df)

創建地圖對象，這裡以台灣為中心
m = folium.Map(location=[23.6978, 120.9605], zoom_start=7)

繪製地震點並在點上顯示地震資訊
for i in range(len(df)): # 取得緯度和經度資訊 latitude = df.iloc[i, 2] longitude = df.iloc[i, 1]

# 取得地震資訊
time = df.iloc[i, 0]
magnitude = df.iloc[i, 3]
depth = df.iloc[i, 4]
location = df.iloc[i, 5]

# 在地圖上標記地震點並顯示地震資訊
popup_info = f"Time: {time}<br>Latitude: {latitude}<br>Longitude: {longitude}<br>Magnitude: {magnitude}<br>Depth: {depth}<br>Location: {location}"
folium.Marker([latitude, longitude], popup=folium.Popup(popup_info, max_width=250)).add_to(m)

保存地圖
m.save('earthquake_map.html') 
幫我建立時間軸，讓地震點隨著地震發生時間出現在圖上

GitHub Copilot
你可以使用 folium 的 TimestampedGeoJson 插件來創建時間軸。以下是如何修改你的代碼來實現這個功能：
import pandas as pd
import folium
from folium.plugins import TimestampedGeoJson

# 讀取CSV文件，使用'cp950'編碼
df = pd.read_csv(r'C:\\Users\\Johnny\\Desktop\\cycu_ai2024\\11272008\\20240409\\地震活動彙整.csv', encoding='cp950')

# 刪除第一欄和第一列的資料
df = df.drop(df.columns[0], axis=1)
df = df.drop(df.index[0], axis=0)

# 將目前第一欄的資料轉換成日期時間格式
df[df.columns[0]] = pd.to_datetime(df[df.columns[0]])

# 將目前第一欄的資料只取2024-04-03 07:58:00 之後的資料
df = df[df[df.columns[0]] >= '2024-04-03 07:58:00']

# 將第一欄的名稱改為時間，第二欄的名稱改為經度，第三欄的名稱改為緯度，第四欄的名稱改為規模，第五欄的名稱改為深度，第六欄的名稱改為地點
df.columns = ['時間', '經度', '緯度', '規模', '深度', '地點']

# 創建地圖對象，這裡以台灣為中心
m = folium.Map(location=[23.6978, 120.9605], zoom_start=7)

# 創建一個包含地震點的 GeoJSON 對象
data = {
    'type': 'FeatureCollection',
    'features': [
        {
            'type': 'Feature',
            'geometry': {
                'type': 'Point',
                'coordinates': [df.iloc[i, 1], df.iloc[i, 2]],
            },
            'properties': {
                'time': df.iloc[i, 0].isoformat(),
                'style': {'color' : 'red'},
                'icon': 'circle',
                'iconstyle':{
                    'fillColor': 'red',
                    'fillOpacity': 0.6,
                    'stroke': 'false',
                    'radius': 5
                },
                'popup': f"Time: {df.iloc[i, 0]}<br>Latitude: {df.iloc[i, 2]}<br>Longitude: {df.iloc[i, 1]}<br>Magnitude: {df.iloc[i, 3]}<br>Depth: {df.iloc[i, 4]}<br>Location: {df.iloc[i, 5]}",
            }
        } for i in range(len(df))
    ]
}

# 將 GeoJSON 對象添加到地圖上，並創建時間軸
TimestampedGeoJson(
    data,
    period='PT1H',
    add_last_point=True,
    auto_play=False,
    loop=False,
    max_speed=1,
    loop_button=True,
    date_options='YYYY/MM/DD HH:mm:ss',
    time_slider_drag_update=True
).add_to(m)

# 保存地圖
m.save('earthquake_map.html')
這個代碼將創建一個時間軸，並在地圖上顯示地震點。地震點將根據其時間屬性在時間軸上出現。你可以使用時間軸控件來查看不同時間的地震點。

ohnnyj1031
地震點與資訊並未呈現在圖上

GitHub Copilot
這可能是因為你的地震數據的時間格式與 TimestampedGeoJson 插件期望的格式不匹配。TimestampedGeoJson 需要時間數據為 ISO 8601 格式，並且需要包含日期和時間。

你需要確保你的時間數據是這種格式的。你可以使用 pandas 的 to_datetime 函數來轉換時間數據，並使用 isoformat 方法來獲取 ISO 8601 格式的時間字符串。

此外，你需要確保你的經度和緯度數據是數字格式的。如果它們是字符串格式的，你需要將它們轉換為數字。

以下是修改後的代碼：
# 將目前第一欄的資料轉換成日期時間格式並轉換為 ISO 8601 格式
df[df.columns[0]] = pd.to_datetime(df[df.columns[0]]).apply(lambda x: x.isoformat())

# 將經度和緯度數據轉換為數字
df['經度'] = pd.to_numeric(df['經度'])
df['緯度'] = pd.to_numeric(df['緯度'])

# 創建一個包含地震點的 GeoJSON 對象
data = {
    'type': 'FeatureCollection',
    'features': [
        {
            'type': 'Feature',
            'geometry': {
                'type': 'Point',
                'coordinates': [df.iloc[i, 1], df.iloc[i, 2]],
            },
            'properties': {
                'time': df.iloc[i, 0],
                'style': {'color' : 'red'},
                'icon': 'circle',
                'iconstyle':{
                    'fillColor': 'red',
                    'fillOpacity': 0.6,
                    'stroke': 'false',
                    'radius': 5
                },
                'popup': f"Time: {df.iloc[i, 0]}<br>Latitude: {df.iloc[i, 2]}<br>Longitude: {df.iloc[i, 1]}<br>Magnitude: {df.iloc[i, 3]}<br>Depth: {df.iloc[i, 4]}<br>Location: {df.iloc[i, 5]}",
            }
        } for i in range(len(df))
    ]
}

# 將 GeoJSON 對象添加到地圖上，並創建時間軸
TimestampedGeoJson(
    data,
    period='PT1H',
    add_last_point=True,
    auto_play=False,
    loop=False,
    max_speed=1,
    loop_button=True,
    date_options='YYYY/MM/DD HH:mm:ss',
    time_slider_drag_update=True
).add_to(m)

# 保存地圖
m.save('earthquake_map.html')

如果你的數據仍然無法在地圖上顯示，那可能是因為你的數據有問題。你需要檢查你的數據是否包含無效的值或異常值。

Johnnyj1031
地震點別用紅色點，改用成藍色箭頭指示地震點

GitHub Copilot
你可以通过修改 icon 和 iconstyle 属性来改变地震点的样式。以下是如何将地震点的样式改为蓝色箭头：
# 創建一個包含地震點的 GeoJSON 對象
data = {
    'type': 'FeatureCollection',
    'features': [
        {
            'type': 'Feature',
            'geometry': {
                'type': 'Point',
                'coordinates': [df.iloc[i, 1], df.iloc[i, 2]],
            },
            'properties': {
                'time': df.iloc[i, 0],
                'style': {'color' : 'blue'},
                'icon': 'arrow',
                'iconstyle':{
                    'fillColor': 'blue',
                    'fillOpacity': 0.6,
                    'stroke': 'false',
                },
                'popup': f"Time: {df.iloc[i, 0]}<br>Latitude: {df.iloc[i, 2]}<br>Longitude: {df.iloc[i, 1]}<br>Magnitude: {df.iloc[i, 3]}<br>Depth: {df.iloc[i, 4]}<br>Location: {df.iloc[i, 5]}",
            }
        } for i in range(len(df))
    ]
}

# 將 GeoJSON 對象添加到地圖上，並創建時間軸
TimestampedGeoJson(
    data,
    period='PT1H',
    add_last_point=True,
    auto_play=False,
    loop=False,
    max_speed=1,
    loop_button=True,
    date_options='YYYY/MM/DD HH:mm:ss',
    time_slider_drag_update=True
).add_to(m)

# 保存地圖
m.save('earthquake_map.html')

注意：icon 属性设置为 'arrow' 可能不会在所有情况下都能正常工作，因为这取决于你的 folium 版本和你的浏览器是否支持这个图标。如果箭头图标无法正常显示，你可能需要找到一个替代的图标或者使用一个自定义的图标。
